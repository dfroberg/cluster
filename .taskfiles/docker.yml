---
version: "3"
env:
  ANSIBLE_CONFIG: "{{.PROJECT_DIR}}/provision/docker/ansible.cfg"

vars:
  PROJECT_DIR:
    sh: "git rev-parse --show-toplevel"
  ANSIBLE_CONFIG: "{{.PROJECT_DIR}}/provision/docker/ansible.cfg"
  CLUSTER_DIR: "{{.PROJECT_DIR}}/cluster"
  ANSIBLE_DIR: "{{.PROJECT_DIR}}/provision/ansible/docker"
  ANSIBLE_PLAYBOOK_DIR: "{{.ANSIBLE_DIR}}/playbooks"
  ANSIBLE_ROLE_DIR: "{{.ANSIBLE_DIR}}/roles"
  ANSIBLE_INVENTORY_DIR: "{{.ANSIBLE_DIR}}/inventory"

tasks:
  list:
    vars:
      ANSIBLE_INVENTORY_DIR: "{{.PROJECT_DIR}}/provision/ansible/docker/inventory"
    desc: List all the hosts
    dir: "{{.PROJECT_DIR}}/provision/ansible/docker"
    cmds:
      - "ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --list-hosts"
    silent: true

  check-date:
    vars:
      ANSIBLE_INVENTORY_DIR: "{{.PROJECT_DIR}}/provision/ansible/docker/inventory"
    desc: Check date on all the hosts
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - "ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --one-line --become -m command -a 'date'"
    silent: true

  check-space:
    vars:
      ANSIBLE_INVENTORY_DIR: "{{.PROJECT_DIR}}/provision/ansible/docker/inventory"
    desc: Check space on all the hosts
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - "ansible dockerhost -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --one-line --become -m command -a 'df -h /'"
    silent: true
  free-space:
    vars:
      ANSIBLE_INVENTORY_DIR: "{{.PROJECT_DIR}}/provision/ansible/docker/inventory"
    desc: Free space on all the hosts
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - "ansible dockerhost -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --one-line --become -m command -a 'rm -rf /var/ramdisk-backup/*'"
    silent: true
  fstrim:
    vars:
      ANSIBLE_INVENTORY_DIR: "{{.PROJECT_DIR}}/provision/ansible/docker/inventory"
    desc: Fstrim all the hosts
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - "ansible dockerhost -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --one-line --become -m command -a 'fstrim /'"
    silent: true
  ping:
    vars:
      ANSIBLE_INVENTORY_DIR: "{{.PROJECT_DIR}}/provision/ansible/docker/inventory"
    desc: Ping all the hosts
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - "ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --one-line  --become -m 'ping'"
    silent: true

  uptime:
    vars:
      ANSIBLE_INVENTORY_DIR: "{{.PROJECT_DIR}}/provision/ansible/docker/inventory"
    desc: Uptime of all the hosts
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible dockerhost -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --one-line -a 'uptime'
    silent: true

  clean-logs:
    vars:
      ANSIBLE_INVENTORY_DIR: "{{.PROJECT_DIR}}/provision/ansible/docker/inventory"
    desc: Clean up stale logs
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - "ansible dockerhost -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --one-line -a 'rm /var/log/*.*.gz' --become"
    silent: true

  reboot:
    vars:
      ANSIBLE_INVENTORY_DIR: "{{.PROJECT_DIR}}/provision/ansible/docker/inventory"
    desc: Reboot all the docker nodes
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - "ansible dockerhost -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml -a '/bin/systemctl reboot' --become"
    silent: true

  reboot:status:
    vars:
      ANSIBLE_INVENTORY_DIR: "{{.PROJECT_DIR}}/provision/ansible/docker/inventory"
    desc: Check if node reboot is scheduled by kured
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - "ansible dockerhost -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml -a 'test -f /var/run/reboot-required' --become"
    silent: true

  poweroff:
    vars:
      ANSIBLE_INVENTORY_DIR: "{{.PROJECT_DIR}}/provision/ansible/docker/inventory"
    desc: Shutdown all the docker nodes
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - "ansible dockerhost -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml -a '/bin/systemctl poweroff' --become"
    silent: true

  playbook:os-prepare:
    vars:
      ANSIBLE_INVENTORY_DIR: "{{.PROJECT_DIR}}/provision/ansible/docker/inventory"
    desc: Prepare all the docker nodes for running docker workloads
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - "ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/os.yml"
    silent: true

  playbook:apps-prepare:
    vars:
      ANSIBLE_DIR: "{{.PROJECT_DIR}}/provision/ansible/docker"
      ANSIBLE_PLAYBOOK_DIR: "{{.ANSIBLE_DIR}}/playbooks"
      ANSIBLE_ROLE_DIR: "{{.ANSIBLE_DIR}}/roles"
      ANSIBLE_INVENTORY_DIR: "{{.ANSIBLE_DIR}}/inventory"
    desc: Prepare all the docker nodes for running docker workloads
    dir: "{{.PROJECT_DIR}}/provision/ansible/docker/"
    cmds:
      - "ansible-playbook -vv -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/apps.yml"
    silent: true

