---
- hosts:
    - gateway
    - master01
  become: false
  gather_facts: false
  any_errors_fatal: true
  tasks:
    - name: Generate kubeconfig for home-dns on k8s-0
      block:
        - name: Fetch service account for home-dns
          ansible.builtin.set_fact:
            DNSServiceAccountRaw: "{{ lookup('community.kubernetes.k8s', namespace='kube-system', kind='ServiceAccount', resource_name='home-dns') }}"

        - name: Extract service account token from service account
          ansible.builtin.set_fact:
            DNSServiceAccountToken: "{{ DNSServiceAccountRaw | json_query('secrets[*].name | [0]') }}"

        - name: Fetch CA
          ansible.builtin.set_fact:
            DNSCertificateAuthorityRaw: "{{ lookup('community.kubernetes.k8s', namespace='kube-system', kind='Secret', resource_name=DNSServiceAccountToken) }}"

        - name: Extract CA Cert from CA
          ansible.builtin.set_fact:
            DNSCertificateAuthority: '{{ DNSCertificateAuthorityRaw | json_query(''data."ca.crt"'') }}'

        - name: Extract CA Token from CA
          ansible.builtin.set_fact:
            DNSCertificateAuthorityToken: "{{ DNSCertificateAuthorityRaw | json_query('data.token') | b64decode }}"

        - name: Create kubeconfig
          ansible.builtin.copy:
            dest: "/tmp/kubeconfig-homedns"
            content: |
              ---
              apiVersion: v1
              kind: Config
              clusters:
              - name: home
                cluster:
                  certificate-authority-data: {{ DNSCertificateAuthority }}
                  server: https://{{ k3s_registration_address }}:6443
              contexts:
              - name: home
                context:
                  cluster: home
                  user: home-dns
              users:
              - name: home-dns
                user:
                  token: {{ DNSCertificateAuthorityToken }}
              current-context: home
            mode: 0755

        - name: Copy kubeconfig to /tmp
          ansible.builtin.fetch:
            src: "/tmp/kubeconfig-homedns"
            dest: "/tmp/kubeconfig-homedns"
            flat: true
      when: "'master01' in inventory_hostname"

    - name: Configure and start CoreDNS on Opnsense
      block:
        - name: Create coredns directories
          ansible.builtin.file:
            path: /usr/local/etc/coredns
            state: directory
            mode: 0755

        - name: Copy kubeconfig to Opnsense
          ansible.builtin.copy:
            src: /tmp/kubeconfig-homedns
            dest: /usr/local/etc/coredns/kubeconfig
            mode: 0755
          delegate_to: gateway

        - name: Create Corefile
          ansible.builtin.template:
            src: Corefile.j2
            dest: /usr/local/etc/coredns/Corefile
            mode: 0755

        - name: Create CoreDNS rc.conf script
          ansible.builtin.template:
            src: coredns-rc.conf.j2
            dest: /etc/rc.conf.d/coredns
            mode: 0755

        - name: Create CoreDNS rc.d script
          ansible.builtin.template:
            src: coredns-rc.d.j2
            dest: /usr/local/etc/rc.d/coredns
            mode: 0755

        - name: Create CoreDNS action script
          ansible.builtin.template:
            src: actions_coredns.conf.j2
            dest: /usr/local/opnsense/service/conf/actions.d/actions_coredns.conf
            mode: 0755

        - name: Create CoreDNS start up script
          ansible.builtin.template:
            src: 99-coredns.j2
            dest: /usr/local/etc/rc.syshook.d/start/99-coredns
            mode: 0755

        - name: Create CoreDNS log rotation config
          ansible.builtin.template:
            src: coredns-newsyslog.conf.j2
            dest: /etc/newsyslog.conf.d/coredns
            mode: 0755

        - name: Stop running CoreDNS
          ansible.builtin.shell: |
            /usr/local/etc/rc.d/coredns stop
          ignore_errors: true

        - name: Copy CoreDNS
          ansible.builtin.copy:
            src: build/bin/coredns
            dest: /usr/local/sbin/coredns
            mode: 0755

        - name: Run CoreDNS
          ansible.builtin.shell: |
            /usr/local/etc/rc.d/coredns start
      when: "'gateway' in inventory_hostname"
