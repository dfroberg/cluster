---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: matrix-media-repo
  namespace: comms
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://ananace.gitlab.io/charts
      chart: matrix-media-repo
      version: 3.0.6
      sourceRef:
        kind: HelmRepository
        name: ananace-charts
        namespace: flux-system
      interval: 5m
  install:
    timeout: 10m
    remediation:
      retries: 3
  upgrade:
    timeout: 10m
    remediation:
      retries: 3
      remediateLastFailure: true
    cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  dependsOn:
    - name: matrix-synapse
      namespace: comms
  values:
    image:
      repository: turt2live/matrix-media-repo
      tag: v1.2.12

    config:
      datastores:
        - type: s3
          enabled: true
          forKinds: ["all"]
          opts:
            tempPath: "/tmp/mediarepo_s3_upload"
            ssl: true
            bucketName: matrix-media
            endpoint: ${SECRET_MINIO_HOST}
            accessKeyId: ${SECRET_MINIO_ACCESS_KEY}
            accessSecret: ${SECRET_MINIO_SECRET_KEY}

    admins:
      - "@dfroberg:${SECRET_DOMAIN}"

    homeservers:
      "matrix.${SECRET_DOMAIN}":
        csApi: 'http://matrix-synapse:8008'
        backoffAt: 10
        adminApiKind: 'matrix'
        identicons:
          enabled: false

    ingress:
      enabled: true
      className: traefik
      annotations:
        kubernetes.io/tls-acme: "true"
        cert-manager.io/cluster-issuer: letsencrypt-production
        external-dns/is-public: "true"
        haproxy-ingress-proxy.pfsense.org/enabled: "true"
        haproxy-ingress-proxy.pfsense.org/frontend: "https-443"
        haproxy-ingress-proxy.pfsense.org/backend: "traefik-443"
        external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
      hosts:
        - host: matrix.${SECRET_DOMAIN}
          paths:
            - "/_matrix/media"
      tls:
        - secretName: "${SECRET_DOMAIN//./-}-tls"
          hosts:
            - matrix.${SECRET_DOMAIN}

    postgresql:
      enabled: true
      sslMode: disable
      postgresqlPassword: ${SECRET_MATRIX_POSTGRESQL_PASSWORD}
      postgresqlUsername: synapse
      postgresqlDatabase: synapse
      persistence:
        enabled: true
        existingClaim: matrix-media-repo-postgresql-pvc

    persistence:
      enabled: false

  valuesFrom:
    - kind: ConfigMap
      name: matrix-media-bucket
      valuesKey: BUCKET_NAME
      targetPath: config.datastores[0].opts.bucketName
    - kind: ConfigMap
      name: matrix-media-bucket
      valuesKey: BUCKET_HOST
      targetPath: config.datastores[0].opts.endpoint
    - kind: ConfigMap
      name: matrix-media-bucket
      valuesKey: AWS_ACCESS_KEY_ID
      targetPath: config.datastores[0].opts.accessKeyId
    - kind: ConfigMap
      name: matrix-media-bucket
      valuesKey: AWS_SECRET_ACCESS_KEY
      targetPath: config.datastores[0].opts.accessSecret
