---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: qbittorrent-vpn
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: qbittorrent
      version: 13.2.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    image:
      repository: ghcr.io/k8s-at-home/qbittorrent
      tag: v4.4.0
    updateStrategy: Recreate
    env:
      TZ: "${CLUSTER_TZ}"
    service:
      main:
        ports:
          http:
            port: 8080
      bittorrent:
        enabled: true
        type: LoadBalancer
        loadBalancerIP: "${SVC_QBITTORRENT_ADDR}"
        ports:
          bittorrent:
            enabled: true
            port: ${VPN_FORWARDED_PORT_1}
            protocol: TCP
            targetPort: ${VPN_FORWARDED_PORT_1}
        externalTrafficPolicy: Local
    ingress:
      main:
        enabled: true
        #ingressClassName: "traefik"
        ingressClassName: "nginx"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "cloud-download"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns/is-public: "false"
          haproxy-ingress-proxy.pfsense.org/enabled: "true"
          haproxy-ingress-proxy.pfsense.org/frontend: "https-443"
          haproxy-ingress-proxy.pfsense.org/backend: "nginx-443"
          #traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          # Custom themes provided by https://github.com/gilbN/theme.park
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_hide_header "x-webkit-csp";
            proxy_hide_header "content-security-policy";
            proxy_hide_header "X-Frame-Options";
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.dev/css/base/qbittorrent/organizr.css"></head>';
            sub_filter_once on;
          nginx.ingress.kubernetes.io/auth-url: "http://authelia.security.svc.cluster.local/api/verify"
          nginx.ingress.kubernetes.io/auth-signin: "https://login.${SECRET_DOMAIN}"
        hosts:
          - host: "qb-vpn.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: "${SECRET_DOMAIN//./-}-tls"
            hosts:
              - "qb-vpn.${SECRET_DOMAIN}"
    metrics:
      enabled: false
      exporter:
        image:
          repository: ghcr.io/k8s-at-home/prometheus-qbittorrent-exporter
          tag: v1.2.0
        env:
          user: "${SECRET_QB_USERNAME}"
          password: "${SECRET_QB_PASSWORD}"
      serviceMonitor:
        interval: 1m
        scrapeTimeout: 10s
      prometheusRule:
        enabled: true
    podSecurityContext:
      supplementalGroups:
        - 100
    persistence:
      config:
        enabled: true
        existingClaim: qbittorrent-vpn-config-v1
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_ADDR}"
            path: ${NAS_BASE_PATH}
        mountPath: /media
    podAnnotations:
      backup.velero.io/backup-volumes: config
      pre.hook.backup.velero.io/container: fsfreeze
      pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/config"]'
      post.hook.backup.velero.io/container: fsfreeze
      post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/config"]'
      setGateway: "true"
    nodeSelector: 
      worker: yes
    resources:
      requests:
        memory: 250Mi
        cpu: 1500m
      limits:
        memory: 2000Mi
    additionalContainers:
      fsfreeze:
        name: fsfreeze
        image: ubuntu:focal-20210827
        imagePullPolicy: IfNotPresent
        command:
          - "/bin/bash"
          - "-c"
          - "sleep infinity"
        volumeMounts:
          - name: config
            mountPath: /config
        securityContext:
          privileged: true
