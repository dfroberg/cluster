apiVersion: batch/v1
kind: CronJob
metadata:
  generation: 1
  name: postgres-backup-restore
  namespace: backup-system
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          # Get the latest backup file that is over 100k 
          - args:
            - -c
            - psql -U benji -h ${SECRET_POSTGRES_HOST} benji -f /var/backups/benji/$(find /var/backups/benji/ -size +100k -maxdepth 1 -name "*.sql" -type f -exec stat -c "%y %n" {} + | sort -r | head -n1 | cut -d " " -f 4-)
            command:
            - /bin/sh
            env:
            - name: PGPASSWORD
              value: secret
            image: postgres:12
            imagePullPolicy: IfNotPresent
            name: postgres-backup
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /var/backups
              name: postgres-storage
          dnsPolicy: ClusterFirst
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
          - name: postgres-storage
            persistentVolumeClaim:
              claimName: backup-system-nfs-tank-share-pvc
  # Some day next year
  schedule: 05 04 1 7 * 
  successfulJobsHistoryLimit: 3
  suspend: false
status: {}
