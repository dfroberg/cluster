---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: loki
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: loki
      version: 2.12.1
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  install:
    timeout: 10m
    remediation:
      retries: 3
  upgrade:
    timeout: 10m
    remediation:
      retries: 3
      remediateLastFailure: true
    cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  values:
    image:
      repository: ghcr.io/k8s-at-home/loki
    nodeSelector: 
      worker: yes
    serviceMonitor:
      enabled: true
    config:
      storage_config:
        # aws:
        #   s3: "s3://${SECRET_MINIO_ACCESS_KEY}:${SECRET_MINIO_SECRET_KEY}@${SECRET_MINIO_HOST}:${SECRET_MINIO_HOSTPORT}/loki"
        #   s3forcepathstyle: true
        aws:
          bucketnames: loki
          endpoint: ${SECRET_MINIO_HOST}
          region: minio
          access_key_id: ${SECRET_MINIO_ACCESS_KEY}
          secret_access_key: ${SECRET_MINIO_SECRET_KEY}
          insecure: false
          sse_encryption: false
          http_config:
            idle_conn_timeout: 90s
            response_header_timeout: 0s
            insecure_skip_verify: false
          s3forcepathstyle: true  
        boltdb_shipper:
          active_index_directory: /data/loki/index
          cache_location: /data/loki/index_cache
          resync_interval: 5s
          shared_store: s3
      ruler:
        storage:
          type: local
          local:
            directory: /rules
        rule_path: /tmp/scratch
        alertmanager_url: http://prometheus-alertmanager:9093
        ring:
          kvstore:
            store: inmemory
        enable_api: true
    alerting_groups:
      #
      # frigate
      #
      - name: frigate
        rules:
          - alert: FrigateUnableToReachMQTT
            expr: |
              sum(count_over_time({app="frigate"} |= "Unable to connect to MQTT server"[2m])) > 0
            for: 10s
            labels:
              severity: critical
              category: logs
            annotations:
              summary: "Frigate is unable to reach MQTT"
      #
      # *arr applications
      #
      - name: arr
        rules:
          - alert: ArrDatabaseIsLocked
            expr: |
              sum by (app) (count_over_time({app=~".*arr"} |= "database is locked"[2m])) > 0
            for: 10s
            labels:
              severity: critical
              category: logs
            annotations:
              summary: "{{$value}} is experiencing locked database issues"
          - alert: ArrDatabaseIsMalformed
            expr: |
              sum by (app) (count_over_time({app=~".*arr"} |~ "(?i)database disk image is malformed"[2m])) > 0
            for: 10s
            labels:
              severity: critical
              category: logs
            annotations:
              # TODO: Figure out how to use hostname in summary
              summary: "An arr app is experiencing malformed database disk image issues"
      #
      # vaultwarden
      #
      - name: vaultwarden
        rules:
          - alert: VaultwardenUnableToReachPostgresql
            expr: |
              sum by (app) (count_over_time({app="vaultwarden"} |~ "(?i)could not connect to server"[2m])) > 0
            for: 10s
            labels:
              severity: critical
              category: logs
            annotations:
              summary: "Vaultwarden is unable to connect to postgresql"
  # TODO: https://github.com/grafana/helm-charts/pull/700
  postRenderers:
    - kustomize:
        patchesJson6902:
          - target:
              version: v1beta1
              kind: Ingress
              name: loki
            patch:
              - op: add
                path: /spec/ingressClassName
                value: nginx
              - op: replace
                path: /apiVersion
                value: networking.k8s.io/v1
              - op: remove
                path: /spec/rules/0/http/paths/0/backend/servicePort
              - op: remove
                path: /spec/rules/0/http/paths/0/backend/serviceName
              - op: add
                path: /spec/rules/0/http/paths/0/backend/service
                value:
                  name: loki
                  port:
                    name: http-metrics
              - op: add
                path: /spec/rules/0/http/paths/0/pathType
                value: Prefix
      
