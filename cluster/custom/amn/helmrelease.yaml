# https://github.com/bitnami/charts/blob/master/bitnami/wordpress/values.yaml
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: wordpress
  namespace: amn
spec:
  interval: 1m
  chart:
    spec:
      chart: wordpress
      # Version should be overwritten by values specified in apps/{dev,stage,prod}/wordpress-values.yaml
      version: 10.8.0
      sourceRef:
        kind: HelmRepository
        name: bitnami-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    replicaCount: 1
    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%

    wordpressSkipInstall: true
    wordpressUsername: dfroberg

    wordpressEmail: danny@froberg.org
    wordpressFirstName: Danny
    wordpressLastName: Froberg
    wordpressBlogName: amn
    wordpressTablePrefix: amn_
    wordpressScheme: http

    existingSecret: amn-custom-secrets

    wordpressExtraConfigContent: |
      define('WP_MEMORY_LIMIT', '64M');
      @ini_set( 'upload_max_size', '64M' );
      @ini_set( 'post_max_size', '64M');
      @ini_set( 'max_execution_time', '300' );

    ## SMTP mail delivery configuration
    smtpExistingSecret: amn-custom-secrets

    service:
      type: ClusterIP
    persistence:
      enabled: true
      existingClaim: "amn-nfs"
    metrics:
      enabled: true
    serviceMonitor:
      enabled: true
    mariadb:
      architecture: replication
      
      extraVolumeMounts:
        - name: amn-nfs
          mountPath: /backup
          readOnly: false
      auth:
        existingSecret: amn-custom-secrets
        database: amn
        username: amn


      primary:
        persistence:
          enabled: true
          storageClass: "ceph-block"
          accessModes:
            - ReadWriteOnce
          size: 25Gi
      secondary:
        persistence:
          enabled: true
          storageClass: "ceph-block"
          accessModes:
            - ReadWriteOnce
          size: 25Gi
    memcached:
      enabled: true
      service:
        port: 11211
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 11
      targetCPU: 50
      targetMemory: 50
    resources:
      limits:
        cpu: 750m
        memory: "750Mi"
      requests:
        memory: "100Mi"
        cpu: "120m"
    ingress:
      enabled: true
      #ingressClassName: "traefik"
      ingressClassName: "nginx"
      pathType: ImplementationSpecific
      hostname: amn.${SECRET_DOMAIN}
      annotations:
        hajimari.io/enable: "true"
        hajimari.io/icon: "cloud"
        external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
        external-dns/is-public: "false"
        haproxy-ingress-proxy.pfsense.org/enabled: "true"
        haproxy-ingress-proxy.pfsense.org/frontend: "https-443"
        haproxy-ingress-proxy.pfsense.org/backend: "nginx-443"
        #traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        # Custom themes provided by https://github.com/gilbN/theme.park
        nginx.ingress.kubernetes.io/configuration-snippet: |
          proxy_hide_header "x-webkit-csp";
          proxy_hide_header "content-security-policy";
          proxy_hide_header "X-Frame-Options";
          proxy_set_header Accept-Encoding "";
        # sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.dev/css/base/qbittorrent/organizr.css"></head>';
        # sub_filter_once on;
        nginx.ingress.kubernetes.io/auth-url: "http://authelia.security.svc.cluster.local/api/verify"
        nginx.ingress.kubernetes.io/auth-signin: "https://login.${SECRET_DOMAIN}"
      extraHosts:
        - name: amn-mobile.local
          path: /
      extraTls:
      - hosts:
        - amn.local
        secretName: amn.local-tls
      - hosts:
        - amn-mobile.local
        secretName: amn-mobile.local-tls
      secrets: "${SECRET_DOMAIN//./-}-tls"
